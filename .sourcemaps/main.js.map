{"version":3,"sources":["../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/mocks/user.mock.ts","../../src/providers/github-service/github-service.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/mocks/repository.mock.ts","../../src/app/app.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 107;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 107\n// module chunks = 2","var map = {\n\t\"../pages/profile-search-results/profile-search-results.module\": [\n\t\t273,\n\t\t1\n\t],\n\t\"../pages/profile-search/profile-search.module\": [\n\t\t272,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 149;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 149\n// module chunks = 2","import  {User} from \"../models/user.interface\";\nconst  userList: User[] = [\n  {\n    name: 'Kunta',\n    company: 'Owezzy IT Solution',\n    location: 'Ngong, Kenya.',\n    bio: \"I make videos on angular \",\n    avatar_url: \"http://i.imgur.com/jaV62P6.jpg\",\n    email: 'owezzy@gmail.com'\n  },\n  {\n    name: 'Owezzy',\n    company: 'Owezzy IT Solution',\n    location: 'Karen, Kenya.',\n    bio: \"I make videos on React and Vue \",\n    avatar_url: \"http://i.imgur.com/jaV62P6.jpg\",\n    email: 'kungfuOwezzy@gmail.com'\n  }\n];\n\nexport const USER_LIST = userList;\n\n\n\n// WEBPACK FOOTER //\n// ./src/mocks/user.mock.ts","import { Injectable } from '@angular/core';\nimport { Http,Response } from '@angular/http';\nimport {Observable} from \"rxjs/Observable\";\n\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw'  ;\nimport 'rxjs/add/operator/do' ;\n\n\nimport {User} from \"../../models/user.interface\";\nimport {USER_LIST} from \"../../mocks/user.mock\";\nimport {Repository} from \"../../models/repository.interface\";\nimport {REPOSITORY_LIST} from \"../../mocks/repository.mock\";\n\n/*\n  Generated class for the GithubServiceProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class GithubServiceProvider {\n\nprivate baseUrl: string = 'https://api.github.com/users';\nprivate reposUrl:string = 'repos'\n  constructor(private http: Http) {\n    console.log('Hello GithubServiceProvider Provider');\n  }\n\n  //this collects the username provided\n  getUserInformation(username: string): Observable<User>{\n    return this.http.get(`${this.baseUrl}/${username}`)\n    .do(this.logData)\n    .map(this.extractData)\n    .do(this.logData)  \n    .catch(this.handleError)\n  }\n\n//this gets the users repositories\ngetRepositoryInformation(username: string): Observable<Repository[]>{\n  return this.http.get(`${this.baseUrl}/${username}/${this.reposUrl}`)\n  .do(this.logData)\n  .map(this.extractData)\n  .do(this.logData)  \n  .catch(this.handleError)\n}\n\n  /*\n  * we find the username from within USER_LIST, equal to the username passed in.\n  * Return the result as an observable.*/\n  mockGetUserInformation(username: string): Observable<User>{\n    return Observable.of(USER_LIST.filter(user => user.name === username)[0]);\n  }\n  /*\n   * we find the username from within REPOSITORY_LIST, equal to the username passed in.\n   * Return the result as an observable.*/\n  mockGetRepositoryInformation(username: string): Observable<Repository[]>{\nreturn Observable.of(REPOSITORY_LIST.filter(repository => repository.owner.name === username))\n  }\n\n  private handleError(error: Response | any){\n    return Observable.throw(error.json() || \"Server Error\")\n  }\n\n  private extractData(response:Response){\n    return response.json();\n  }\n\n  private logData(response: Response){\n    console.log(response);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/github-service/github-service.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport {HttpModule} from \"@angular/http\";\n\n\nimport { MyApp } from './app.component';\nimport { GithubServiceProvider } from '../providers/github-service/github-service';\n\n@NgModule({\n  declarations: [\n    MyApp,\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp, {}, \n{\n  links: [\n    { loadChildren: '../pages/profile-search/profile-search.module#ProfileSearchPageModule', name: 'ProfileSearchPage', segment: 'Profile', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/profile-search-results/profile-search-results.module#ProfileSearchResultsPageModule', name: 'ProfileSearchResultsPage', segment: 'profile/results/:username', priority: 'low', defaultHistory: [] }\n  ]\n}),\n    HttpModule\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    GithubServiceProvider\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import {Repository} from \"../models/repository.interface\";\nimport {USER_LIST} from \"./user.mock\";\n\nconst  repositoryList: Repository[] = [\n  {\n    name: 'Ionic 3 Camera',\n    description: \"This repositor shows the usage of the camera utility within ionic 3\",\n    owner: USER_LIST[0]\n  },\n  {\n    name: 'Ionic 3 SMS',\n    description: \"This repositor shows the usage of the SMS utility within ionic 3\",\n    owner: USER_LIST[0]\n  },\n  {\n    name: 'Ionic 3 Multimedia',\n    description: \"This repositor shows the usage of the camera utility within ionic 3\",\n    owner: USER_LIST[1]\n  },{\n    name: 'Ionic 3 Speaker',\n    description: \"This repositor shows the usage of the camera utility within ionic 3\",\n    owner: USER_LIST[0]\n  }\n];\n\nexport const REPOSITORY_LIST = repositoryList;\n\n\n\n// WEBPACK FOOTER //\n// ./src/mocks/repository.mock.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage: string = 'ProfileSearchPage';\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}